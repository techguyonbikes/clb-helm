image: docker:19
services:
  - docker:19-dind

cache:
  paths:
    - ./.m2/repository
    # keep cache across branch
  key: "$CI_BUILD_REF_NAME"

stages:
  - package
  - build
  - deploy

package:
  image: maven:3.8.5-jdk-11
  stage: package
  script:
    - mvn -T20 clean install
  artifacts:
    when: always
    paths:
      - modules/clb-api/target/*.jar
    expire_in: 1 week
  only:
    - main
    - cicd

build:
  image:
    name: docker:18.09
    entrypoint: [""]
  services:
    - docker:18.09-dind
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  stage: build
  script:
    - ls
    - echo $CI_REGISTRY_USER
    - echo $CI_REGISTRY_PASSWORD
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker build -t "$CI_REGISTRY_IMAGE:latest" .
    - docker push $CI_REGISTRY_IMAGE:latest
  only:
    - main
    - cicd
    - release

deploy:
  image:
    name: docker:18.09
  services:
    - docker:18.09-dind
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  stage: deploy
  before_script:
    - 'command -v ssh-agent >/dev/null || ( apk add --update openssh )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan $SERVER_IP >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - echo $GCLOUD_SERVICE_KEY |  base64 -d > ${HOME}/gcloud-service-key.json
    - gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
    - kubectl get all
