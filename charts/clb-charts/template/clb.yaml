apiVersion: apps/v1
kind: Deployment
metadata:
  name: clb-be
spec:
  replicas: {{ .Values.kubernetes.replicaCount | default 1 }}
  selector:
    matchLabels:
      app: clb-be
  template:
    metadata:
      labels:
        app: clb-be
    spec:
      containers:
        - image: ducvu123/cloudbet-be:{{ .Values.image.tag }}
          name: cloudbet-be
          imagePullPolicy: {{ .Values.kubernetes.imagePullPolicy }}
          env:
            - name: SPRING_APPLICATION_JSON
              valueFrom:
                configMapKeyRef:
                  name: clb-config
                  key: config.json
          readinessProbe:
            failureThreshold: {{ .Values.kubernetes.readinessFailureThreshold | default 2 }}
#            httpGet:
#              path: {{ .Values.kubernetes.httpReadinessPath | default "/clb/cloudbet/api/actuator/health/readiness" }}
#              port: {{ .Values.port | default 10003 }}
            initialDelaySeconds: {{ .Values.kubernetes.readinessDelaySecs | default 1 }}
            periodSeconds: {{ .Values.kubernetes.readinessPeriodSecs | default 30 }}
            successThreshold: {{ .Values.kubernetes.readinessSuccessThreshold | default 1 }}
            timeoutSeconds:  {{ .Values.kubernetes.readinessTimeoutSecs | default 2 }}
          livenessProbe:
            failureThreshold: {{ .Values.kubernetes.livenessFailureThreshold | default 2 }}
#            httpGet:
#              path: {{ .Values.kubernetes.httpLivenessPath | default "/clb/cloudbet/api/actuator/health/liveness" }}
#              port: {{ .Values.port | default 10003 }}
            initialDelaySeconds: {{ .Values.kubernetes.livenessDelaySecs | default 1 }}
            periodSeconds: {{ .Values.kubernetes.livenessPeriodSecs | default 30 }}
            successThreshold: {{ .Values.kubernetes.livenessSuccessThreshold | default 1 }}
            timeoutSeconds:  {{ .Values.kubernetes.livenessTimeoutSecs | default 5 }}
          startupProbe:
            failureThreshold: {{ .Values.kubernetes.startupFailureThreshold | default 60 }}
#            httpGet:
#              path: {{ .Values.kubernetes.httpStartupPath | default "/clb/cloudbet/api/actuator/health/liveness" }}
#              port: {{ .Values.port | default 10003 }}
            initialDelaySeconds: {{ .Values.kubernetes.startupDelaySecs | default 15 }}
            periodSeconds: {{ .Values.kubernetes.startupPeriodSecs | default 5 }}
            successThreshold: {{ .Values.kubernetes.startupSuccessThreshold | default 1 }}
            timeoutSeconds:  {{ .Values.kubernetes.startupTimeoutSecs | default 1 }}
          # resources:
          #   limits:
          #     cpu: {{ .Values.kubernetes.resourcesLimitsCpu | default "300m" }}
          #     memory: {{ .Values.kubernetes.resourcesLimitsMemory | default "512Mi" }}
          #   requests:
          #     cpu: {{ .Values.kubernetes.resourcesRequestsCpu | default "100m" }}
          #     memory: {{ .Values.kubernetes.resourcesRequestsMemory | default "128Mi" }}
      {{ if .Values.kubernetes.useSecrets }}
      imagePullSecrets:
        - name: {{ .Values.kubernetes.imagePullSecrets }}
      {{ end }}
---
apiVersion: v1
kind: Service
metadata:
  name: clb-be-service
spec:
  selector:
    app: clb-be
  ports:
    - protocol: TCP
      port: 20001
      targetPort: {{ .Values.port | default 20001 }
    - protocol: TCP
      port: 20002
      targetPort: 20002
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: clb-config
data:
  config.json:
    '{
      "app.port": {{.Values.port}},
      "redis.host" : "{{.Values.redis.host}}",
      "redis.port" : "{{.Values.redis.port}}",
      "redis.password" : "{{.Values.redis.password}}",
      "cors.allow-origins" : "{{.Values.appUrl.ui}}",
      "log.level.root" : "{{.Values.log.level.root}}",
      "log.level.spring" : "{{.Values.log.level.spring}}",
      "log.level.app" : "{{.Values.log.level.app}}",
      "postgresql.datasource.password": "{{.Values.postgresql.datasource.password}}",
      "postgresql.datasource.username": "{{.Values.postgresql.datasource.username}}",
      "postgresql.datasource.dbUrl": "{{.Values.postgresql.datasource.dbUrl}}",
      "socket.host":"{{.Values.socket.host}}
     }'
